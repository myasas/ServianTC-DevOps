# apiVersion: v1
# kind: Namespace
# metadata:
#   name: servian
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: servian-conf
data:
  conf.toml: |-
    "DbUser" = "postgres"
    "DbPassword" = "pAssw0rd"
    "DbName" = "postgres"
    "DbPort" = "5432"
    "DbHost" = "postgres"
    "ListenHost" = "0.0.0.0"
    "ListenPort" = "3000"
  DbName: "postgres"
  DbPort: "5432"
  DbHost: "preprod-servian-storage-db.c2fhns4vxzho.ap-southeast-2.rds.amazonaws.com"
  ListenHost: "0.0.0.0"
  ListenPort: "3000"
---
apiVersion: v1
kind: Secret
metadata:
  name: serviantc-secret
data:
  # You can include additional key value pairs as you do with Opaque Secrets
  dbuser: cm9vdA==
  dbpassword: VmZuRHNnSzhITlZtOHE0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: serviantc
  namespace: default
spec:
  replicas: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      deployment: serviantc
      product: serviantcapp
  template:
    metadata:
      labels:
        deployment: serviantc
        product: serviantcapp
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9201"
        prometheus.io/path: /metric-service/metrics
    spec:
      securityContext:
          runAsUser: 0
          runAsGroup: 0
          fsGroup: 0
      containers:
        - image: servian/techchallengeapp:latest
          name: servian
          args: ['serve']
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command: ["/bin/sh", "-c", "nc -z localhost 3000"]
            initialDelaySeconds: 120
            failureThreshold: 20
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["/bin/sh", "-c", "nc -z localhost 3000"]
            initialDelaySeconds: 120
            failureThreshold: 20
            periodSeconds: 10
          # lifecycle:
          #   preStop:
          #     exec:
          #       command: ["sh", "-c", "${CARBON_PATH}/bin/wso2server.sh stop"]
          resources:
            requests:
              memory: 64Mi
              cpu: 200m
            limits:
              memory: 400Mi
              cpu: 500m
          ports:
            - containerPort: 3000
              protocol: "TCP"
          env:
            # Define the environment variable
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: VTT_DBUSER
              valueFrom:
                secretKeyRef:
                  name: serviantc-secret
                  key: dbuser
            - name: VTT_DBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: serviantc-secret
                  key: dbpassword

            - name: VTT_DBNAME
              valueFrom:
                configMapKeyRef:
                  name: servian-conf
                  key: DbName
            - name: VTT_DBPORT
              valueFrom:
                configMapKeyRef:
                  name: servian-conf
                  key: DbPort
            - name: VTT_DBHOST
              valueFrom:
                configMapKeyRef:
                  name: servian-conf
                  key: DbHost
            - name: VTT_LISTENHOST
              valueFrom:
                configMapKeyRef:
                  name: servian-conf
                  key: ListenHost
            - name: VTT_LISTENPORT
              valueFrom:
                configMapKeyRef:
                  name: servian-conf
                  key: ListenPort
          volumeMounts:
            - name: servian
              mountPath: /TechChallengeApp/conf.toml
              subPath: conf.toml
      volumes:
        - name: servian
          configMap:
            name: servian-conf
      # serviceAccountName: servian-svc-account
---
apiVersion: v1
kind: Service
metadata:
  name: serviantc
  namespace: default
spec:
  selector:
    deployment: serviantc
    product: serviantcapp
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: servian
#   labels:
#     app: servian
# spec:
#   selector:
#     matchLabels:
#       app: servian
#   template:
#     metadata:
#       labels:
#         app: servian
#     spec:
#       containers:
#       - image: servian/techchallengeapp:latest
#         name: servian
#         args: ['serve']
#         ports:
#         - containerPort: 3000
#           name: servian
#         resources:
#           limits:
#             cpu: 500m
#           requests:
#             cpu: 200m
#         volumeMounts:
#           - name: servian
#             mountPath: /TechChallengeApp/conf.toml
#             subPath: conf.toml
#       volumes:
#         - name: servian
#           configMap:
#             name: servian-conf

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: servian
#   labels:
#     app: servian
# spec:
#   ports:
#     - port: 80
#       name: http
#       targetPort: 3000
#   selector:
#     app: servian
#   type: LoadBalancer



# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: mgt-apim
#   namespace: wso2
#   annotations:
#     # Health Check Settings
#     alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
#     alb.ingress.kubernetes.io/healthcheck-port: "8280"
#     alb.ingress.kubernetes.io/healthcheck-path: /services/Version
#     alb.ingress.kubernetes.io/backend-protocol: HTTPS
#     # Sessiong stickiness/affinity
#     alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=300
# spec:
#   selector:
#     deployment: wso2apim
#     product: allinone
#   type: NodePort
#   ports:
#     - name: servlet-http
#       protocol: TCP
#       port: 9763
#       targetPort: 9763
#     - name: servlet-https
#       protocol: TCP
#       port: 9443
#       targetPort: 9443
#     - name: amqp-transport
#       protocol: TCP
#       port: 5672
#       targetPort: 5672
#     - name: tm-throttling-data
#       protocol: TCP
#       port: 9611
#       targetPort: 9611
#     - name: tm-throttling-auth
#       protocol: TCP
#       port: 9711
#       targetPort: 9711

